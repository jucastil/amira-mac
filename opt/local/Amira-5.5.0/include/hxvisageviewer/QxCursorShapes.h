/*
Copyright 1999-2013 Visualization Sciences Group, SAS
Copyright 1995-2013, ZIB Berlin
ALL RIGHTS RESERVED.

amira(R) is a registered trademark of ZIB.

amira(R) is being jointly developed by Zuse Institute Berlin and
Visualization Sciences Group, SAS.
Avizo® is a registered trademark of Visualization Sciences Group, SAS
HardCopy, MeshViz, VolumeViz, TerrainViz are marks of Visualization
Sciences Group, SAS 
Visualization Sciences Group, SAS is a source licensee of OpenGL®, Open Inventor® 
from Silicon Graphics, Inc. OpenGL® and Open Inventor® are 
registered trademark of Silicon Graphics, Inc. All other products and 
company names are trademarks or registered trademarks of 
their respective companies. 

FEI Visualization Sciences Group accepts no liability to any 
party for loss or damage caused by errors or omissions or by 
statements of any kind in this publication, whether such errors 
result from accident, negligence or any other cause. FEI Visualization
Sciences Group assumes  no liability for incidental or consequential
damages arising from the use of information in this publication.
FEI Visualization Sciences Group provides no 
warranties regarding the information contained in this 
publication, whether expressed, implied, or statutory, including 
implied warranties of merchantability or fitness for a 
particular purpose. 

FEI Visualization Sciences Group also does not assume any liability
for links from this publication to publications from other companies,
organizations or individuals. FEI Visualization Sciences Group does not
imply endorsement of any specific  company, organization or individual
through offering links to this content.
All information provided within this publication 
is subject to change at any time and is provided for 
informational purposes only by FEI Visualization Sciences Group.
Copyright 1994-2012 by Visualization Sciences Group, SAS Merignac, France.

*/

/// @addtogroup hxvisageviewer hxvisageviewer
/// @{
#define rotate_width 32
#define rotate_height 32
static unsigned char rotate_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 
  0x00, 0x30, 0x18, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x04, 0x40, 0x00, 
  0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x01, 0x00, 0x01, 
  0x00, 0x01, 0x01, 0x01, 0xC0, 0x87, 0x03, 0x01, 0x80, 0x03, 0x01, 0x01, 
  0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define rotateMask_width 32
#define rotateMask_height 32
static unsigned char rotateMask_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0xF0, 0x1F, 0x00, 
  0x00, 0xF8, 0x3F, 0x00, 0x00, 0x3C, 0x78, 0x00, 0x00, 0x0E, 0xE0, 0x00, 
  0x00, 0x07, 0xC0, 0x01, 0x00, 0x07, 0xC0, 0x01, 0x80, 0x03, 0x81, 0x03, 
  0xF0, 0x9F, 0x83, 0x03, 0xE0, 0xCF, 0x87, 0x03, 0xC0, 0x87, 0x83, 0x03, 
  0x80, 0x03, 0x81, 0x03, 0x00, 0x01, 0xC0, 0x01, 0x00, 0x00, 0xC0, 0x01, 
  0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x3F, 0x00, 
  0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define target_width 32
#define target_height 32
static unsigned char target_bits[] = {
  0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define targetMask_width 32
#define targetMask_height 32
static unsigned char targetMask_bits[] = {
  0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 
  0x80, 0x3F, 0x00, 0x00, 0x40, 0x4E, 0x00, 0x00, 0x20, 0x84, 0x00, 0x00, 
  0x10, 0x04, 0x01, 0x00, 0x08, 0x04, 0x02, 0x00, 0x08, 0x04, 0x02, 0x00, 
  0x1F, 0x00, 0x1F, 0x00, 0xFF, 0xF1, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 
  0x08, 0x04, 0x02, 0x00, 0x08, 0x04, 0x02, 0x00, 0x10, 0x04, 0x01, 0x00, 
  0x20, 0x84, 0x00, 0x00, 0x40, 0x4E, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 
  0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define curvedHandMask_width 32
#define curvedHandMask_height 32
static unsigned char curvedHandMask_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x70, 0x69, 0x00, 0x00, 
  0x88, 0x91, 0x00, 0x00, 0x08, 0x33, 0x01, 0x00, 0x30, 0x66, 0x02, 0x00, 
  0x20, 0x44, 0x04, 0x00, 0x40, 0xCC, 0x04, 0x00, 0x80, 0x88, 0x08, 0x00, 
  0x84, 0x08, 0x08, 0x00, 0x9A, 0x00, 0x08, 0x00, 0xA2, 0x00, 0x10, 0x00, 
  0xA2, 0x00, 0x10, 0x00, 0x44, 0x00, 0x10, 0x00, 0x08, 0x00, 0x10, 0x00, 
  0x08, 0x00, 0x20, 0x00, 0x10, 0x00, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x00, 
  0x00, 0x03, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x08, 0x40, 0x00, 
  0x00, 0x10, 0x80, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define flatHandMask_width 32
#define flatHandMask_height 32
static unsigned char flatHandMask_bits[] = {
  0x00, 0x60, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x9C, 0x03, 0x00, 
  0x00, 0x92, 0x02, 0x00, 0x00, 0x92, 0x06, 0x00, 0x00, 0x92, 0x04, 0x00, 
  0x00, 0x91, 0x0C, 0x00, 0x18, 0x89, 0x14, 0x00, 0xA4, 0x88, 0x14, 0x00, 
  0xA4, 0x48, 0x14, 0x00, 0x44, 0x44, 0x12, 0x00, 0x44, 0x40, 0x12, 0x00, 
  0x44, 0x20, 0x12, 0x00, 0x22, 0x00, 0x12, 0x00, 0x22, 0x00, 0x09, 0x00, 
  0x02, 0x00, 0x08, 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x04, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x08, 0x00, 0x02, 0x00, 0x10, 0x00, 0x02, 0x00, 
  0x20, 0x00, 0x01, 0x00, 0x20, 0x80, 0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 
  0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define pointingHandMask_width 32
#define pointingHandMask_height 32
static unsigned char pointingHandMask_bits[] = {
  0x00, 0x06, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 
  0x40, 0x20, 0x00, 0x00, 0x20, 0x46, 0x00, 0x00, 0x10, 0x89, 0x00, 0x00, 
  0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 
  0x00, 0xC9, 0x01, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x01, 0x0E, 0x00, 
  0x00, 0x01, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x3C, 0x01, 0x10, 0x00, 
  0xC2, 0x01, 0x10, 0x00, 0x0C, 0x03, 0x10, 0x00, 0x10, 0x00, 0x08, 0x00, 
  0x20, 0x00, 0x08, 0x00, 0x40, 0x00, 0x08, 0x00, 0x80, 0x00, 0x04, 0x00, 
  0x00, 0x01, 0x04, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x04, 0x08, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define blank_width 32
#define blank_height 32
static unsigned char blank_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

#define measure_width 32
#define measure_height 32
  static unsigned char measure_bits[] = {
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 
  0x41, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 
  0xF1, 0x03, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define contrast_width 32
#define contrast_height 32
static unsigned char contrast_bits[] = {
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 
  0x41, 0x00, 0x3E, 0x00, 0x81, 0x80, 0xC1, 0x00, 0x01, 0xC1, 0x8E, 0x01, 
  0x01, 0x42, 0x0F, 0x01, 0xC1, 0xA7, 0x0F, 0x02, 0x49, 0xA0, 0x0F, 0x02, 
  0x95, 0xA0, 0x0F, 0x02, 0x93, 0xA0, 0x0F, 0x02, 0x21, 0xA1, 0x0F, 0x02, 
  0x20, 0x41, 0x0F, 0x01, 0x40, 0xC2, 0x8E, 0x01, 0x40, 0x82, 0xC1, 0x00, 
  0x80, 0x03, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define contrastMask_width 32
#define contrastMask_height 32
static unsigned char contrastMask_bits[] = {
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x0F, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 
  0x7F, 0x00, 0x3E, 0x00, 0xFF, 0x80, 0xFF, 0x00, 0xFF, 0xC1, 0xFF, 0x01, 
  0xFF, 0xC3, 0xFF, 0x01, 0xFF, 0xE7, 0xFF, 0x03, 0x7F, 0xE0, 0xFF, 0x03, 
  0xF7, 0xE0, 0xFF, 0x03, 0xF3, 0xE0, 0xFF, 0x03, 0xE1, 0xE1, 0xFF, 0x03, 
  0xE0, 0xC1, 0xFF, 0x01, 0xC0, 0xC3, 0xFF, 0x01, 0xC0, 0x83, 0xFF, 0x00, 
  0x80, 0x03, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define camera_width 32
#define camera_height 32
static unsigned char camera_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x1E, 0x00, 0xF8, 0x7E, 0x1E, 0x00, 
  0x00, 0xF1, 0x00, 0x00, 0x28, 0xCE, 0x14, 0x00, 0x50, 0xDF, 0x0A, 0x00, 
  0x28, 0xB8, 0x15, 0x00, 0x90, 0xB7, 0x09, 0x00, 0xC8, 0xAF, 0x15, 0x00, 
  0xC8, 0xCF, 0x09, 0x00, 0xC0, 0xCF, 0x01, 0x00, 0x80, 0x0F, 0x00, 0x00, 
  0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define cameraMask_width 32
#define cameraMask_height 32
static unsigned char cameraMask_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0x01, 0x00, 0x00, 0xFC, 0x03, 0x00, 0xF0, 0xFF, 0x0F, 0x00, 
  0xF8, 0xFF, 0x1F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 
  0xFC, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 
  0xFC, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0x3F, 0x00, 
  0xFC, 0xFF, 0x3F, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0xF0, 0xFF, 0x01, 0x00, 
  0xE0, 0x1F, 0x00, 0x00, 0xE0, 0x0F, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };
#define cross_width 32
#define cross_height 32
static unsigned char cross_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0xFE, 0xFF, 0x03, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

/// @}
