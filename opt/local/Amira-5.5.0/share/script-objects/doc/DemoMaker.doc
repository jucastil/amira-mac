% This file specifies the DemoMaker module documentation 
% for the online as well as printed documentation. Use 
%    amira/bin/arch-*/doc2html -a 
% to generate the HTML file.
% Author: Hartmut Schirmacher (hschirma@mc.com)

\begin{hxmodule2}{DemoMaker}{creates a series of animations for replay}
\hxpackname{amira}
\hxlabel{DemoMaker}
\begin{hxdescription}
Using the {\it DemoMaker} module, you can create an animated
sequence of operations, e.g. for automatically running demonstrations
or for advanced movie recording. Select 
{\it Create/Animation/Demos/DemoMaker} from the menu 
to add a DemoMaker module to the Pool.

{\bf Defining and storing a demo sequence}


The demo sequence is a set of {\it actions} over a time range as
represented by the module's \hxref{DemoMaker_Time}{Time} port. A
wide range of such actions can be defined, e.g. switching a toggle
value on or off, varying the numerical value of some other module's
port over time, and defining breaks to interrupt the automatic demo
sequence. 

Actions are defined by first selecting an entry from the
\hxref{DemoMaker_GUI_element}{GUI elements} port. This port lists all GUI
elements of all modules that currently exist in the Pool,
except the ports of the active {\it DemoMaker} module itself. 

Once you have selected the right element (or a different action type
like a pause, break, go-to, or an arbitrary Tcl command) from the
\hxref{DemoMaker_GUI_element}{GUI elements} menu, additional ports
will show up below the {\it GUI elements} port, depending on the type
of the selected element (e.g. numeric, toggle, button, ...). Using
these ports, you can define the time (or time range) of the action on
the {\it DemoMaker} \hxref{DemoMaker_Time}{Time} line as well as the
value to which the selected GUI element will be set at that time (see
\hxref{DemoMaker_Example}{example} below).

When action time and values have been defined, press the
{\it Add} button in the
\hxref{DemoMaker_EventList}{Event List} button line. This adds the
desired action to the DemoMaker's list of events as represented by the
{\it Event List} menu. Multiple sequential, overlapping, or parallel
actions may be contained in one demo sequence.

Once a part of the desired action sequence is defined, simply store it
by choosing {\it File / Save Network...} from the
menu. {\it DemoMaker} in its current state will be saved along with
the rest of the Pool. When saving the network, make sure the 
\hxref{DemoMaker_Time}{Time} slider is in the desired starting
position.


\hxlabel{DemoMaker_playing}
{\bf Playing a demo sequence}


For playing the demo sequence as defined, simply press the
\hxref{DemoMaker_Time}{Time} slider's play button (triangle
pointing to the right) or press the corresponding function key {\tt
F4}.  The sequence will run from the current time step to the end of
the demo, or to the next break as defined by the user (see
\hxref{DemoMaker_break}{Defining a break} below). The play button will change
into a stop button, and pressing that button or pressing the {\tt F3}
function key immediately stops playing. If the demo stops at a
user-defined break, continue by again clicking the play button or
pressing {\tt F4}.

If the demo is stopped at the beginning or at some user-defined break,
you can press the function key {\tt F10} to jump to the point of
the next break, or to the end of the demo. Similarly, pressing
{\tt F9} jumps to the previous break or to the very beginning of
the action sequence. Once you have jumped to the right step of the
demo, simply press play or {\tt F4} again to play it from there.

If the action sequence is running too fast or too slow, you can adjust
its speed using the \hxref{DemoMaker_Time}{Time} port's {\it
Configure} option (right-click onto the time port, see
\hxref{HxPortTime}{time port documentation}). Note that the playback
speed can only be adjusted for the complete time range at once. If you
want only to change the speed of only part of the sequence, you must
do so by adjusting the time range of the corresponding action entries.

\hxlabel{DemoMaker_Example}
{\bf Usage Example}


Here is a small example to demonstrate the way {\it DemoMaker}
works. 
\ifdefined \Amira
Load {\tt lobus.am} from the {\tt tutorials} subdirectory
\else
Load {\tt motor.am} from the {\tt tutorials} subdirectory
\fi
of the \ProductName installation directory. Connect an {\it OrthoSlice}
module and an {\it Isosurface} module. Create a {\it DemoMaker}
by selecting it from the {\it Create/Animation/Demo} menu.

Now your network should look similar to this:\\
\ifdefined \Amira
\hximage{DemoMaker_example}
\else
\hximage{DemoMaker_example_motor}
\fi

All available user interface ports of the modules in the Pool
should now appear in the {\it GUI element} port of the {\it DemoMaker}
module. If not, press the {\it Update} button.

Now select {\it OrthoSlice/Slice Number} from the {\it GUI elements}
menu. Fields for specifying start/end values and start/end time
appear. Enter {\tt 86} and {\tt 0} as start and end values and {\tt 0}
and {\tt 0.4} as start/end time:\\
\hximage{DemoMaker_example02}

Now press the {\it Add} button to add this action event to the
event list. Press the time slider's play button to see the demo
sequence just specified. You should see the {\it OrthoSlice} plane
moving during the time range from 0 to 0.4, but nothing happening in
the time range from 0.4 to 1.0.

Now select a threshold of 70 in the {\it Isosurface} module and
press {\it Apply} to make the surface appear in the viewer. Now go
back to {\it DemoMaker}, select {\it OrthoSlice/Viewer mask/Viewer
0} from the {\it GUI elements} menu, select {\it on} as the
toggle value and {\tt 0.4} as the trigger time:\\
\hximage{DemoMaker_example03}

Now press {\it Add} again to add this action to the list. Jump back
to {\tt 0} by clicking on the time slider. You should see that when
jumping back (from later than 0.4 to earlier than 0.4) the
{\it Isosurface} is switched off. Then play the demo from the
beginning, and you see that the surface is switched on right after the
OrthoSlice is moved.

As another exercise you can create a camera path (select
{\it Create/CameraPath} or {\it Create/CameraRotate} from the
menu and edit the camera path to your liking. Then press
{\it Update} in {\it DemoMaker} and select
{\it CameraPath/Time} or {\it CameraRotate/Time} as GUI
element. Now the start/end value refers to the value of the camera
time slider. Enter the minimum and maximum values of that time
slider. Enter 0.0 and 0.6 as the start/end time:\\
\hximage{DemoMaker_example04}

Now you see that in parallel to the actions defined before, the camera
path is applied to the scene. Note that you can execute only parts of
a camera path, or concatenate multiple paths this way. However,
multiple camera paths cannot be used in parallel.

\end{hxdescription}

\begin{hxconnections}
\hxlabel{DemoMaker_data}
\hxport{Data}{\tt [not used]}\\
The {\it data} port is a default script object port, but is not 
used by {\it DemoMaker}.

\hxlabel{DemoMaker_time} 
\hxport{Time}{\tt [optional]}\\ 
The {\it Time} port is a quick way for synchronizing other modules with
DemoMaker's {\it Time} port, e.g. for using
the \hxref{HxMovieMaker}{MovieMaker} module or camera path modules like
\hxref{HxCircularCameraPath}{CameraRotate} or
\hxref{HxKeyframeCameraPath}{CameraPath}. Alternatively, you can use
camera path objects with {\it DemoMaker} by selecting these objects'
time sliders from the \hxref{DemoMaker_GUI_element}{GUI element} port
and making it part of the {\it DemoMaker} event list.

\end{hxconnections}

\begin{hxports}

\hxlabel{DemoMaker_Time}
\hxport{Time}\\
\hximage{DemoMaker_time}\\
The time slider defines the time range in which the demo sequence is
played, and by clicking on the slider, one can jump to an arbitrary
point of the demo. Clicking one of the play buttons (triangles
pointing to the left/right for backwards/forwards) will start playing
the demo. Right-clicking on the port brings up a dialog box allowing
you to change the range of the slider (min/max value) as well as the
increment determining the playback speed (smaller increment means
slower playback). For more information, see documentation of the
\hxref{HxPortTime}{time port}.

\hxlabel{DemoMaker_EventList}
\hxport{Event List (Selection)}\\
\hximage{DemoMaker_eventList}\\
This menu contains the list of currently defined demo actions that
make up the demo sequence. The buttons below this menu always refer to
the currently selected menu entry.


\hxlabel{DemoMaker_EventAction}
\hxport{Event List (Buttons)}\\
\hximage{DemoMaker_eventAction}\\
Manipulate the event list menu. {\it Add} adds the event defined in
the lower part of the {\it DemoMaker} module to the list of demo
action events.  When selecting one of the action entries from the
{\it Event List} menu, the {\it Remove} button deletes this entry
from the list, and the {\it Replace} button replaces the selected
entry by the event as defined in the lower part of the
{\it DemoMaker} module.


\hxlabel{DemoMaker_Functions}
\hxport{Functions}\\
\hximage{DemoMaker_functions}\\
Activate/deactivate this {\it DemoMaker} instance, and show
optional parts of the {\it DemoMaker} user interface, such as some
option ports and some ports for editing the time line. 
\begin{itemize}
\item {\it active:} activate/deactivate this module. When deactivated,
  the module will not define any function keys and not manipulate 
  objects in the Pool. Deactivating is especially important 
  when using multiple alternative {\it DemoMaker} objects.
\item {\it options:} display option ports (see {\it Options (1)} 
       - {\it Options (3)} below).
\item {\it time edit:} display ports for editing the time line (see 
      {\it Move from} - {\it Time edit} below).
\end{itemize}


\hxlabel{DemoMaker_Options1}
\hxport{Options (1)}\\
\hximage{DemoMaker_options}\\

This port is only shown when the {\it options} toggle of the
{\it Functions} port is enabled. 

\begin{itemize} 
\item {\it skip break:} do not stop at user-defined
      breaks when playing the demo sequence. 
\item {\it skip pause:} do not execute user-defined pause events 
      (no waiting time).
\end{itemize}


\hxlabel{DemoMaker_Options2}
\hxport{Options (2)}\\
\hximage{DemoMaker_moreOpt1}\\


This port is only shown when the {\it options} toggle of the 
{\it Functions} port is enabled.
\begin{itemize}
\item {\it auto start:} lets the demo start automatically when the
      network containing the {\it DemoMaker} module is loaded. 
\item {\it function keys:} when toggled off, no function keys
      (F3/F4/F9/F10) will be defined when the network containing the
      {\it DemoMaker} module is loaded. This is especially important 
      when combining multiple {\it DemoMaker} modules, since only 
      one module can define the function keys.
\end{itemize}

\hxlabel{DemoMaker_Options3}
\hxport{Options (3)}\\
\hximage{DemoMaker_moreOpt2}\\
This port is only shown when the {\it options} toggle of the 
{\it functions} port is enabled.
\begin{itemize}
\item {\it explicit redraw:} when toggled on, for each time step the
active viewers are explicitly called to perform a redraw. If toggled
off, \ProductName's {\it auto redraw} feature is used. If in some cases
the desired action sequence is not properly displayed in the viewer,
try toggling {\it explicit redraw} on.
\item {\it debug:} when toggled on, the actual Tcl commands that are
executed during the demo sequence are output to the \ProductName
console. This will significantly slow down the graphical display, but
can be used for understanding what exactly happens in the demo
sequence.
\item {\it wait screen:} enable a waiting image to be displayed during
   jumps on the time line. This is only useful if jumping takes 
   considerable amount of time, e.g. for very long event sequences. 
   If enabled, the {\it Waiting image} port will appear below this 
   option for specifying the waiting screen image file.
\end{itemize}

\hxlabel{DemoMaker_Waiting image}
\hxport{Waiting image}\\
\hximage{DemoMaker_waitImg}\\
If the {\it wait screen} option is enabled, this port is used to specify 
the file name of the waiting screen image. The image will be displayed 
during jumps on the time slider.


\hxlabel{DemoMaker_Move from interval}
\hxport{Move from interval}\\
\hximage{DemoMaker_moveFrom}\\
This port is only shown when the {\it time edit} toggle of the
{\it Functions} port is enabled. Specify the time interval to be
relocated on the time line (see \hxref{DemoMaker_move}{Moving events
on the time line} below).

\hxlabel{DemoMaker_Move to interval}
\hxport{Move to interval}\\
\hximage{DemoMaker_moveTo}\\
This port is only shown when the {\it time edit} toggle of the
{\it Functions} port is enabled. Specify the target time interval
for relocation on the time line (see \hxref{DemoMaker_move}{Moving
events on the time line} below).



\hxlabel{DemoMaker_Time edit}
\hxport{Time edit}\\
\hximage{DemoMaker_timeEdit}\\
This port is only shown when the {\it Time edit} toggle of the
{\it Functions} port is enabled. {\it Move events:} move all
events within the {\it Move from} interval to the {\it Move to}
interval on the time line (see \hxref{DemoMaker_move}{Moving events
on the time line} below).


\hxlabel{DemoMaker_GUI_element}
\hxport{GUI element}\\
\hximage{DemoMaker_guiElements}\\
The selection menu contains all GUI elements in the current 
Pool that can be manipulated using {\it DemoMaker}. If the 
Pool is modified (e.g. by loading a new data set or connecting a new
module), press {\it Update} to update the contents of the selection
menu.

\hxport{Additional Ports}\\
Additional ports will appear in the {\it DemoMaker} module, depending
on the type of {\it GUI element} the user has chosen. These ports are
listed in the following section, grouped by GUI element types.


\end{hxports}

\begin{hxsection}{Defining a break}
\hxlabel{DemoMaker_break}

Selecting {\it *Break, continue on keypress} from the GUI element
menu lets you insert a break in the demo sequence. When playing, the
demo will stop at that point. See \hxref{DemoMaker_playing}{playing a
demo sequence} above.

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
Defines the point in time (on the time slider) at which the break
is inserted.
\end{hxsection}


\begin{hxsection}{Defining a pause}
\hxlabel{DemoMaker_pause}

Selecting {\it *Pause, waiting time} from the GUI element menu lets
you insert a pause, where the demo will stop and wait for a
user-defined amount of time. Please note that such a pause will not be
executed if {\it DemoMaker} is driven by a {\it MovieMaker}
object. In such a case, you must insert a pause by adjusting the time
slider range and adapting the time range of the action entries.

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
Defines the starting point of the pause on the time slider.

\hxport{Waiting duration}\\
\hximage{DemoMaker_waitingTime}\\
Defines the waiting time in seconds. Please note that this time is
taken in addition to the time defined by the time slider range.

\end{hxsection}

\begin{hxsection}{Defining a go-to}
\hxlabel{DemoMaker_goto}

Selecting {\it *Go-to, jump to user-specified time step} from the
GUI element menu lets you jump from the one point in the demo sequence
to another point. For example, you can simply define an endless loop
by jumping back to some previous time step. You can end the loop by
pressing the stop button or {\tt F3} (see
\hxref{DemoMaker_playing}{playing a demo sequence} above).

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
This defines the point in time (on the time slider) at which the go-to
is inserted.

\hxport{Time to jump to}\\
\hximage{DemoMaker_gotoTime}\\
This defines the point in time which the go-to will jump to. For
example, to create a loop between time 0.2 and 0.4, insert a go-to
with {\it Trigger time} 0.4 and {\it Time to jump to} 0.2.
\end{hxsection}


\begin{hxsection}{Defining a toggle}
\hxlabel{DemoMaker_toggle}

Toggle actions can toggle certain GUI elements between the two states
{\it on} and {\it off}.  Examples for toggle values are the
different options in a \hxref{HxPortToggleList}{\it ToggleList
port}</a>, or the orange {\it viewer mask} toggle(s) present in
every data object or display module (to switch the display of the
module in the viewer on and off).

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
This defines the point in time (on the time slider) at which the value
is toggled. 

\hxport{Toggle to value}\\
\hximage{DemoMaker_toggleValue}\\
This defines the value (on or off) to which the selected GUI element
is set at the defined trigger time, if the demo sequence is played
forwards. When playing or jumping backwards, the inverse value is
used.
\end{hxsection}

\begin{hxsection}{Defining a button press}
\hxlabel{DemoMaker_button}

Button actions emulate the pressing of a button or executing certain
events with no parameters.  Examples for buttons elements are the
\hxref{HxPortButtonList}{ButtonList port}, or inverting
the orientation of a clipping plane.

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
This defines the point in time (on the time slider) at which the button 
is pressed or other action is taken.

\hxport{Modifier keys}\\
\hximage{DemoMaker_modifKeys}\\
This defines whether {\it DemoMaker} should emulate that
{\tt Shift}, {\tt Ctrl}, or {\tt Alt} is held down at the
time when the button is pressed. The meaning of these modifier keys
depends on the module defining the button to be pressed.
\end{hxsection}



\begin{hxsection}{Defining a select action}
\hxlabel{DemoMaker_select}

Select actions are used to set a port's value to one of a set of
choices as offered by a \hxref{HxPortMultiMenu}{selection menu} or a
\hxref{HxPortRadioBox}{radio box}.

\hxport{Change from/to value}\\
\hximage{DemoMaker_selectValue}\\
This defines from which old value to which new value the port will be
switched at the specified trigger time. When playing or jumping
backwards, the two values will used inversely.

\hxport{Trigger time}\\
\hximage{DemoMaker_triggerTime}\\
This defines the point in time (on the time slider) at which the port
is set to a new selection value.
\end{hxsection}

\begin{hxsection}{Defining a numeric action}
\hxlabel{DemoMaker_numeric}

Numeric actions are used to vary a port's numerical value from a start
value to an end value over time. Examples for numeric ports are
\hxref{HxPortIntSlider}{numerical sliders} or
\hxref{HxPortIntTextN}{numerical text fields}.

\hxport{Start/end value}\\
\hximage{DemoMaker_startEndValue}\\
The two fields of this port define from which start value to which end
value the value of the GUI element will be varied. The values of this
port are constrained to the range of the corresponding GUI element. 

\hxport{Start/end time}\\
\hximage{DemoMaker_startEndTime}\\
This defines the time range (on the time slider) during which the port
value will be varied from the start value to the end value specified
above. When playing or jumping backwards, the value will be varied
from the end value to the start value.
\end{hxsection}


\begin{hxsection}{Defining a Tcl command}
\hxlabel{DemoMaker_command}

When selecting {\it *Tcl command} from the GUI element menu, you
can insert arbitrary Tcl commands into the demo sequence. Furthermore,
like for \hxref{DemoMaker_numeric}{numeric events}, the command can be
parameterized by one or more numeric values that will be varied between
user-defined start and end values.


\hxport{Tcl command}\\
\hximage{DemoMaker_command}\\
Text field for typing the desired Tcl command. Within the command,
special placeholders {\tt \%0\%}, {\tt \%1\%}, {\tt \%2\%}, ... can
be used that will be replaced by numeric values. The start and end
values for these placeholders are defined in the ports described
below.

\hxport{Start value(s)}\\
\hximage{DemoMaker_startVector}\\
If the numeric placeholder {\tt \%0\%} is used in the
{\it Command} field, specify the start value for this
placeholder. If multiple placeholders are used (e.g. {\tt \%0\%} and
{\tt \%1\%}), specify space-separated start values for all of
the employed placeholders.

\hxport{End value(s)}\\
\hximage{DemoMaker_endVector}\\
If the numeric placeholder {\tt \%0\%} is used in the
{\it Command} field, specify the end value for this
placeholder. If multiple placeholders are used (e.g. {\tt \%0\%} and
{\tt \%1\%}), specify space-separated end values for all of
the employed placeholders.

\hxport{Start/end time}\\
\hximage{DemoMaker_startEndTime}\\
This defines the time range (on the time slider) during which the
specified Tcl command will be executed, with the placeholders replaced
by values between the specified start and end values.
\end{hxsection}


\begin{hxsection}{Moving events on the time line}
\hxlabel{DemoMaker_move}

After you have defined some events on the time line, you may want to
move a part of this event sequence to a different time, e.g. for
inserting more events at a certain point, or for stretching or
compacting part of the demo sequence.

This can be easily done if you switch on the {\it Time edit} toggle
of the {\it Functions} port:\\
\hximage{DemoMaker_timeEditAll}

Simply enter the time interval that you want to relocate in the
{\it Move from} port, enter the destination time interval in the
{\it Move to} port, and press the {\it Move events} button. If
the new time interval is outside of the current min/max time, the
time slider configuration will be updated accordingly.
\end{hxsection}


\begin{hxcommands}
The following commands are methods of the {\it DemoMaker} script
object. They can be called externally by first specifying the name of
the script object (e.g. DemoMaker), followed by a space and the name
of the method. Example: {\tt DemoMaker play} starts playing the
demo sequence.


\hxcommand{play} start playing the time slider at its current 
time step. This function is called when pressing {\tt F4}.

\hxcommand{stop} stop playing the time slider. This function is called
when pressing {\tt F3}. Also called the {\it stop callback} (see
below).  

\hxcommand{jumpNext} jump to the next user-defined break, or to the
end of the demo. This function is called when pressing {\tt F10}.

\hxcommand{jumpPrev} jump to the previous user-defined break, or to
the start of the demo. This function is called when pressing
{\tt F9}.  

\hxcommand{jump <breakidx>} jump to user-defined break. If <breakidx>
is 0, this command will move to the beginning of the demo. Otherwise
it will be jumped to the <breakidx>'th break.

\hxcommand{setEndCallback <cmd>} sets an internal callback function to
the specified Tcl code {\tt <cmd>}. This code will be executed only
once when DemoMaker reaches the end of the time slider. Call with an
empty string to disable the callback.

\hxcommand{writeDescriptionFile} opens a file dialog, where you can
specify a file to which the description file should be saved. The
description file is an xml-file containing several predefined xml-tags
describing the demo. Most important of these tags are the commands to
step through the demo. The description file is used to automatically
generate demosequence files and html pages for steering the demo.

\end{hxcommands}


\begin{hxsection}{DemoMaker tips and limitations}
\hxlabel{DemoMaker_tips}

Although the {\it DemoMaker} module is quite powerful, some things
should be noticed, and there are some known limitations that are
listed here for convenience. If you find further important limitations
or bugs, please report them to our hotline 
as a bug or feature request.

\begin{itemize}
\item The {\it *Load network} action type for loading a different
network file is currently not implemented.

\item For {\it button action}, "snapping" a button to
automatic update mode is not supported yet.

\item GUI elements that are part of a \hxref{HxPortGeneric}{Generic
port} are not properly represented in the {\it GUI elements} menu
of the {\it DemoMaker} module.

\item If a {\it DemoMaker} module is renamed (e.g. by selecting
{\it Edit / Rename...} from the menu), the function keys
{\tt F3/F4/F9/F10} will no longer work. However, simply disabling
and re-enabling the {\it function keys} option in
{\it DemoMaker} helps.

\item If you rename or remove modules after defining events with
{\it DemoMaker}, then events involving these modules will generate
errors. Please properly arrange your network before using DemoMaker.
\end{itemize}
\end{hxsection}


{\bf Further links}\\
\hxref{HxScriptObject}{script object documentation} for script
programming.


\end{hxmodule2}
